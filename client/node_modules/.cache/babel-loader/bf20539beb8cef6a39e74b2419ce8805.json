{"ast":null,"code":"import _classCallCheck from \"/Users/tpl6/Desktop/projects/hmh/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tpl6/Desktop/projects/hmh/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tpl6/Desktop/projects/hmh/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tpl6/Desktop/projects/hmh/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tpl6/Desktop/projects/hmh/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tpl6/Desktop/projects/hmh/client/src/components/Skills-Display/SkillsDisplay.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/FlatButton';\n\nvar SkillsDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SkillsDisplay, _Component);\n\n  function SkillsDisplay() {\n    _classCallCheck(this, SkillsDisplay);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SkillsDisplay).apply(this, arguments));\n  }\n\n  _createClass(SkillsDisplay, [{\n    key: \"render\",\n    value: function render() {\n      var skillsListContent;\n      var skills = this.props.skills;\n\n      if (skills) {\n        skillsListContent = React.createElement(GridList, {\n          cols: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, skills.map(function (skill) {\n          return React.createElement(GridTile, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 16\n            },\n            __self: this\n          }, \"title= \", skill.skill, \"key=\", skill.id, \"subtitle=\", React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }, \"by \", React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            },\n            __self: this\n          }, \"user's name\")), \"actionIcon=\", React.createElement(IconButton, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, React.createElement(ZoomIn, {\n            color: \"white\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          })), React.createElement(\"img\", {\n            src: skill.icon,\n            alt: skill.skill,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }));\n        }));\n      } else {\n        skillsListContent = null;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, skillsListContent);\n    }\n  }]);\n\n  return SkillsDisplay;\n}(Component);\n\nSkillsDisplay.propTypes = {\n  skillsList: PropTypes.array.isRequired\n};\nexport default SkillsDisplay;","map":{"version":3,"sources":["/Users/tpl6/Desktop/projects/hmh/client/src/components/Skills-Display/SkillsDisplay.js"],"names":["React","Component","PropTypes","GridList","GridTile","IconButton","ZoomIn","Dialog","SkillsDisplay","skillsListContent","skills","props","map","skill","id","icon","propTypes","skillsList","array","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAkC,sBAAlC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;IAEOC,a;;;;;;;;;;;;;6BACI;AACL,UAAIC,iBAAJ;AADK,UAEKC,MAFL,GAEgB,KAAKC,KAFrB,CAEKD,MAFL;;AAGL,UAAGA,MAAH,EAAU;AACJD,QAAAA,iBAAiB,GACb,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCC,MAAM,CAACE,GAAP,CAAW,UAAAC,KAAK;AAAA,iBACb,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACYA,KAAK,CAACA,KADlB,UAESA,KAAK,CAACC,EAFf,eAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADP,CAJR,iBASQ,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CATR,EAaI;AAAK,YAAA,GAAG,EAAED,KAAK,CAACE,IAAhB;AAAsB,YAAA,GAAG,EAAEF,KAAK,CAACA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,CADa;AAAA,SAAhB,CADD,CADJ;AAqBL,OAtBD,MAsBK;AACDJ,QAAAA,iBAAiB,GAAC,IAAlB;AACH;;AACH,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,iBADH,CADF;AAKD;;;;EAlC0BR,S;;AAsC7BO,aAAa,CAACQ,SAAd,GAA0B;AACtBC,EAAAA,UAAU,EAACf,SAAS,CAACgB,KAAV,CAAgBC;AADL,CAA1B;AAGA,eAAeX,aAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { GridList, GridTile} from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/FlatButton'\n\n class SkillsDisplay extends Component {\n  render() {\n      let skillsListContent; \n        const { skills } = this.props;\n      if(skills){\n            skillsListContent=(\n                <GridList cols={3}>\n                {skills.map(skill =>\n                    <GridTile>\n                        title= {skill.skill}\n                        key={skill.id}\n                        subtitle={\n                            <span>\n                                by <strong>user's name</strong>\n                            </span>\n                        }\n                        actionIcon={\n                            <IconButton>\n                                <ZoomIn color=\"white\"/>\n                            </IconButton>\n                        }\n                        <img src={skill.icon} alt={skill.skill}/>\n                    </GridTile>\n                    )}\n                </GridList>\n            )\n      }else{\n          skillsListContent=null;\n      }\n    return (\n      <div>\n        {skillsListContent}\n      </div>\n    )\n  }\n}\n\n\nSkillsDisplay.propTypes = {\n    skillsList:PropTypes.array.isRequired\n}\nexport default SkillsDisplay;"]},"metadata":{},"sourceType":"module"}