{"ast":null,"code":"import _classCallCheck from \"/Users/tpl6/Desktop/projects/hmh/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tpl6/Desktop/projects/hmh/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tpl6/Desktop/projects/hmh/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tpl6/Desktop/projects/hmh/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tpl6/Desktop/projects/hmh/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tpl6/Desktop/projects/hmh/client/src/components/Form/Field.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    formControl: {\n      margin: theme.spacing.unit\n    }\n  };\n};\n\nvar ComposedTextField =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ComposedTextField, _React$Component);\n\n  function ComposedTextField() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ComposedTextField);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ComposedTextField)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: 'Composed TextField'\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        name: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ComposedTextField, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"component-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        id: \"component-simple\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"component-helper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        id: \"component-helper\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        \"aria-describedby\": \"component-helper-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(FormHelperText, {\n        id: \"component-helper-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Some important helper text\")), React.createElement(FormControl, {\n        className: classes.formControl,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"component-disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        id: \"component-disabled\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(FormHelperText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Disabled\")), React.createElement(FormControl, {\n        className: classes.formControl,\n        error: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"component-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        id: \"component-error\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        \"aria-describedby\": \"component-error-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(FormHelperText, {\n        id: \"component-error-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Error\")), React.createElement(FormControl, {\n        className: classes.formControl,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        ref: function ref(_ref) {\n          _this2.labelRef = ReactDOM.findDOMNode(_ref);\n        },\n        htmlFor: \"component-outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Name\"), React.createElement(OutlinedInput, {\n        id: \"component-outlined\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        labelWidth: this.labelRef ? this.labelRef.offsetWidth : 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        className: classes.formControl,\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"component-filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Name\"), React.createElement(FilledInput, {\n        id: \"component-filled\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ComposedTextField;\n}(React.Component);\n\nComposedTextField.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ComposedTextField);","map":{"version":3,"sources":["/Users/tpl6/Desktop/projects/hmh/client/src/components/Form/Field.js"],"names":["React","ReactDOM","PropTypes","withStyles","FilledInput","FormControl","FormHelperText","Input","InputLabel","OutlinedInput","styles","theme","container","display","flexWrap","formControl","margin","spacing","unit","ComposedTextField","state","name","handleChange","event","setState","target","value","forceUpdate","classes","props","ref","labelRef","findDOMNode","offsetWidth","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n  },\n});\n\nclass ComposedTextField extends React.Component {\n  state = {\n    name: 'Composed TextField',\n  };\n\n  componentDidMount() {\n    this.forceUpdate();\n  }\n\n  handleChange = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\n          <Input id=\"component-simple\" value={this.state.name} onChange={this.handleChange} />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"component-helper\">Name</InputLabel>\n          <Input\n            id=\"component-helper\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            aria-describedby=\"component-helper-text\"\n          />\n\n          <FormHelperText id=\"component-helper-text\">Some important helper text</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} disabled>\n          <InputLabel htmlFor=\"component-disabled\">Name</InputLabel>\n          <Input id=\"component-disabled\" value={this.state.name} onChange={this.handleChange} />\n          <FormHelperText>Disabled</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} error>\n          <InputLabel htmlFor=\"component-error\">Name</InputLabel>\n          <Input\n            id=\"component-error\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            aria-describedby=\"component-error-text\"\n          />\n\n          <FormHelperText id=\"component-error-text\">Error</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} variant=\"outlined\">\n          <InputLabel\n            ref={ref => {\n              this.labelRef = ReactDOM.findDOMNode(ref);\n            }}\n            htmlFor=\"component-outlined\"\n          >\n            Name\n          </InputLabel>\n          <OutlinedInput\n            id=\"component-outlined\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            labelWidth={this.labelRef ? this.labelRef.offsetWidth : 0}\n          />\n        </FormControl>\n        <FormControl className={classes.formControl} variant=\"filled\">\n          <InputLabel htmlFor=\"component-filled\">Name</InputLabel>\n          <FilledInput id=\"component-filled\" value={this.state.name} onChange={this.handleChange} />\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nComposedTextField.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ComposedTextField);"]},"metadata":{},"sourceType":"module"}