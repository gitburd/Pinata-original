{"ast":null,"code":"import _classCallCheck from \"/Users/tpl6/Desktop/projects/hmh/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tpl6/Desktop/projects/hmh/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tpl6/Desktop/projects/hmh/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tpl6/Desktop/projects/hmh/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tpl6/Desktop/projects/hmh/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tpl6/Desktop/projects/hmh/client/src/components/AddRecordSkill.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\n\nvar AddRecord =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddRecord, _Component);\n\n  function AddRecord(props) {\n    var _this;\n\n    _classCallCheck(this, AddRecord);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddRecord).call(this, props));\n\n    _this.onTextChanged = function (e) {\n      var value = e.target.value;\n      var suggestions = [];\n\n      if (value.length > 0) {\n        var regex = new RegExp(\"^\".concat(value), 'i');\n        suggestions = _this.skills.sort().filter(function (v) {\n          return regex.test(v);\n        });\n      }\n\n      _this.setState(function () {\n        return {\n          suggestions: suggestions,\n          text: value\n        };\n      });\n    };\n\n    _this.skills = [\"Fear\", \"Angry\", \"Sad\", \"Disconnected\", \"Disoriented\", \"Unreal\", \"Jittery\", \"Anxious\", \"Depressed\"];\n    _this.state = {\n      suggestions: [],\n      text: \"\",\n      skill: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(AddRecord, [{\n    key: \"suggestionSelected\",\n    value: function suggestionSelected(value) {\n      this.setState(function () {\n        return {\n          text: value,\n          suggeestion: [],\n          skill: value\n        };\n      });\n    }\n  }, {\n    key: \"renderSuggestions\",\n    value: function renderSuggestions() {\n      var _this2 = this;\n\n      var suggestions = this.state.suggestions;\n\n      if (suggestions.length === 0) {\n        return null;\n      }\n\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, suggestions.map(function (skill) {\n        return React.createElement(\"li\", {\n          onClick: function onClick() {\n            return _this2.suggestionSelected(skill);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, skill);\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var text = this.state.text;\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"skill\"), React.createElement(\"div\", {\n        className: \"AutoCompleteText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: text,\n        type: \"text\",\n        onChange: this.onTextChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.renderSuggestions())), React.createElement(\"p\", {\n        className: \"flagText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Thoughs of suicide\"));\n    }\n  }]);\n\n  return AddRecord;\n}(Component);\n\nexport { AddRecord as default };","map":{"version":3,"sources":["/Users/tpl6/Desktop/projects/hmh/client/src/components/AddRecordSkill.js"],"names":["React","Component","Link","AddRecord","props","onTextChanged","e","value","target","suggestions","length","regex","RegExp","skills","sort","filter","v","test","setState","text","state","skill","suggeestion","map","suggestionSelected","renderSuggestions"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,YAAP;;IAEqBC,S;;;;;AACjB,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,mFAAMA,KAAN;;AADc,UAoBlBC,aApBkB,GAoBF,UAACC,CAAD,EAAM;AACpB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAIE,WAAW,GAAG,EAAlB;;AACA,UAAIF,KAAK,CAACG,MAAN,GAAc,CAAlB,EAAoB;AAChB,YAAMC,KAAK,GAAG,IAAIC,MAAJ,YAAeL,KAAf,GAAwB,GAAxB,CAAd;AACAE,QAAAA,WAAW,GAAG,MAAKI,MAAL,CAAYC,IAAZ,GAAmBC,MAAnB,CAA0B,UAAAC,CAAC;AAAA,iBAAIL,KAAK,CAACM,IAAN,CAAWD,CAAX,CAAJ;AAAA,SAA3B,CAAd;AACH;;AACG,YAAKE,QAAL,CAAc;AAAA,eAAO;AAACT,UAAAA,WAAW,EAAXA,WAAD;AAAcU,UAAAA,IAAI,EAACZ;AAAnB,SAAP;AAAA,OAAd;AAEH,KA7Be;;AAEhB,UAAKM,MAAL,GAAc,CAAC,MAAD,EACd,OADc,EAEd,KAFc,EAGd,cAHc,EAId,aAJc,EAKd,QALc,EAMd,SANc,EAOd,SAPc,EAQd,WARc,CAAd;AAWA,UAAKO,KAAL,GAAW;AACPX,MAAAA,WAAW,EAAC,EADL;AAEPU,MAAAA,IAAI,EAAC,EAFE;AAGPE,MAAAA,KAAK,EAAC;AAHC,KAAX;AAbgB;AAkBjB;;;;uCAagBd,K,EAAM;AACrB,WAAKW,QAAL,CAAc;AAAA,eAAM;AAChBC,UAAAA,IAAI,EAACZ,KADW;AAEhBe,UAAAA,WAAW,EAAC,EAFI;AAGhBD,UAAAA,KAAK,EAACd;AAHU,SAAN;AAAA,OAAd;AAKH;;;wCAMsB;AAAA;;AAAA,UACRE,WADQ,GACO,KAAKW,KADZ,CACRX,WADQ;;AAEf,UAAIA,WAAW,CAACC,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,eAAO,IAAP;AACH;;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKD,WAAW,CAACc,GAAZ,CAAgB,UAACF,KAAD;AAAA,eAAW;AAAI,UAAA,OAAO,EAAE;AAAA,mBACvC,MAAI,CAACG,kBAAL,CAAwBH,KAAxB,CADuC;AAAA,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGzBA,KAHyB,CAAX;AAAA,OAAhB,CAFL,CADJ;AAYH;;;6BAGQ;AAAA,UACGF,IADH,GACY,KAAKC,KADjB,CACGD,IADH;AAET,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEF;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,KAAK,EAAEA,IAAd;AAAoB,QAAA,IAAI,EAAC,MAAzB;AAAgC,QAAA,QAAQ,EAAE,KAAKd,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKoB,iBAAL,EADL,CAFF,CAFE,EAWF;AAAG,QAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAXE,CADJ;AAeD;;;;EAjFkCxB,S;;SAAlBE,S","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport '../App.css';\n\nexport default class AddRecord extends Component {\n    constructor(props){\n        super(props);\n      this.skills = [\"Fear\",\n      \"Angry\",\n      \"Sad\",\n      \"Disconnected\",\n      \"Disoriented\",\n      \"Unreal\",\n      \"Jittery\",\n      \"Anxious\",\n      \"Depressed\"    \n      ];\n\n      this.state={\n          suggestions:[],\n          text:\"\",\n          skill:\"\",\n      };\n    }\n  \n    onTextChanged = (e) =>{\n      const value = e.target.value; \n      let suggestions = [];\n      if (value.length >0){\n          const regex = new RegExp(`^${value}`, 'i');\n          suggestions = this.skills.sort().filter(v => regex.test(v));\n      }\n          this.setState(() => ({suggestions, text:value}));\n  \n      }\n    \n  suggestionSelected(value){\n      this.setState(() =>({\n          text:value,\n          suggeestion:[],\n          skill:value\n      }))\n  }\n  \n  \n  \n   \n  \n      renderSuggestions(){\n          const {suggestions} = this.state;\n          if (suggestions.length === 0 ){\n              return null\n          }\n          return (\n              <ul>\n                  \n                  {suggestions.map((skill) => <li onClick={()=> \n                    this.suggestionSelected(skill)\n                    \n                  }>{skill}</li>)\n                    \n                    }\n                  \n              </ul>\n          )\n      }\n    \n    \n      render() {\n          const { text } = this.state\n      return (\n          <div className=\"main\">\n              <h1>skill</h1>\n        <div className=\"AutoCompleteText\">\n          <input value={text} type=\"text\" onChange={this.onTextChanged} />\n          <ul>\n              {this.renderSuggestions()}\n          </ul>\n          \n\n\n        </div>\n        <p className='flagText'>Thoughs of suicide</p>\n        </div>\n      )\n    }\n  \n   \n  }\n"]},"metadata":{},"sourceType":"module"}